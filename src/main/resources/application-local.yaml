spring:
  javers:
    sql-schema-management-enabled: false
  lifecycle:
    timeout-per-shutdown-phase: 30s

  # 세션 관리 설정
  session:
    store-type: jdbc              # JDBC 기반 세션 저장소 사용
    jdbc:
      initialize-schema: always  # 세션을 위한 데이터베이스 스키마를 항상 초기화

  # Spring Data 웹 지원 설정
  data:
    web:
      pageable:
        max-page-size: 200       # 페이지네이션의 최대 페이지 크기 (최대 200개 항목)

  # Jackson JSON 직렬화 설정
  jackson:
    time-zone: Asia/Seoul        # JSON 직렬화의 시간대를 Asia/Seoul로 설정

  # 데이터베이스 연결 설정
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL}               # 데이터베이스 URL, 환경 변수로 관리
    username: ${SPRING_DATASOURCE_USERNAME}     # 데이터베이스 사용자명, 환경 변수로 관리
    password: ${SPRING_DATASOURCE_PASSWORD}     # 데이터베이스 비밀번호, 환경 변수로 관리

  # JPA 및 Hibernate 설정
  jpa:
    hibernate:
      ddl-auto: create         # 테이블을 삭제하지 않고 데이터베이스 스키마 자동 업데이트
    show-sql: true             # 콘솔에 SQL 문 로그 출력 활성화
    properties:
      hibernate:
        jdbc.time_zone: UTC            # 일관성을 위해 JDBC 시간대를 UTC로 설정
        format_sql: true               # SQL 문을 읽기 쉽게 포맷
        default_batch_fetch_size: 200 # 쿼리 최적화를 위한 배치 페치 크기
        jdbc:
          batch_size: 50              # 삽입/수정 작업의 배치 크기
          order_inserts: true         # 배치 최적화를 위해 삽입문 정렬
          order_updates: true         # 배치 최적화를 위해 수정문 정렬
    open-in-view: false        # 지연 로딩 문제 방지를 위해 Open Session in View 패턴 비활성화

# 관리 엔드포인트 설정
management:
  endpoints:
    web:
      exposure:
        include: health        # 시스템 모니터링을 위해 health 엔드포인트만 HTTP로 노출

  endpoint:
    health:
      show-details: always     # health 엔드포인트에서 항상 상세 상태 정보 표시

# Swagger API 문서 서버 URL
swagger:
  server-url: http://localhost:8080  # Swagger UI 및 API 문서의 기본 URL

# 교차 출처 리소스 공유(CORS) 설정
cors:
  allowed-origins: http://localhost:8080  # 이 출처에서의 요청 허용

# AWS 클라우드 자격 증명 및 서비스 설정
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}      # 환경 변수에서 가져오는 AWS 액세스 키
      secret-key: ${AWS_SECRET_KEY}      # 환경 변수에서 가져오는 AWS 시크릿 키
    region:
      static: ap-northeast-2              # AWS 리전 설정
    s3:
      bucket: ${AWS_S3_BUCKET}            # 환경 변수에서 가져오는 S3 버킷 이름
      cdn-url: ${AWS_CDN_URL}             # S3 콘텐츠 배포를 위한 CDN URL

# 사용자 관련 기본 설정
user:
  default-password: ${USER_DEFAULT_PASSWORD}  # 신규 사용자 기본 비밀번호, 환경 변수에서 가져옴


# Spring Boot graceful shutdown 설정
server:
  shutdown: graceful
