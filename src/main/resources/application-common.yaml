# 공통 설정 - 모든 환경에서 공통으로 사용
spring:
  lifecycle:
    timeout-per-shutdown-phase: 30s  # 애플리케이션 종료 시 각 단계별 최대 대기 시간 (30초)

  # 세션 관리 설정
  session:
    store-type: jdbc              # JDBC 기반 세션 저장소 사용
    jdbc:
      initialize-schema: always  # 세션을 위한 데이터베이스 스키마를 항상 초기화

  # Spring Data 웹 지원 설정
  data:
    web:
      pageable:
        max-page-size: 200       # 페이지네이션의 최대 페이지 크기 (최대 200개 항목)

  # Jackson JSON 직렬화 설정
  jackson:
    time-zone: Asia/Seoul        # JSON 직렬화의 시간대를 Asia/Seoul로 설정

  # 데이터베이스 연결 설정
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/erpdb}
    username: ${SPRING_DATASOURCE_USERNAME:erpuser}
    password: ${SPRING_DATASOURCE_PASSWORD:erppassword}

  # JPA 및 Hibernate 설정
  jpa:
    hibernate:
      ddl-auto: create-drop         # 테이블을 삭제하지 않고 데이터베이스 스키마 자동 업데이트
    properties:
      hibernate:
        jdbc:
          time_zone: UTC            # 일관성을 위해 JDBC 시간대를 UTC로 설정
          batch_size: 50              # 삽입/수정 작업의 배치 크기
          order_inserts: true         # 배치 최적화를 위해 삽입문 정렬
          order_updates: true         # 배치 최적화를 위해 수정문 정렬
        default_batch_fetch_size: 200 # 쿼리 최적화를 위한 배치 페치 크기
    open-in-view: false        # 지연 로딩 문제 방지를 위해 Open Session in View 패턴 비활성화

# 서버 설정
server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful

# 관리 엔드포인트 설정
management:
  endpoints:
    web:
      exposure:
        include: health        # 시스템 모니터링을 위해 health 엔드포인트만 HTTP로 노출

  endpoint:
    shutdown:
      access: unrestricted

# AWS 클라우드 자격 증명 및 서비스 설정
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY} 
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2             
    s3:
      bucket: ${AWS_S3_BUCKET}
      cdn-url: ${AWS_CDN_URL}
