name: Deploy Dev to EC2

on:
  push:
    branches: [ dev ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: ✅ 코드 체크아웃
        uses: actions/checkout@v4

      - name: 🔁 Gradle 캐시 복원
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            build/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle-wrapper.properties', '**/settings.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🧱 Gradle로 JAR 빌드
        run: ./gradlew bootJar --no-daemon --parallel -x test

      - name: 🔐 SSH 키 설정
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEV_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 📦 JAR 파일 EC2로 전송
        run: rsync -avz --progress build/libs/*.jar ${{ secrets.DEV_EC2_USER }}@${{ secrets.DEV_EC2_HOST }}:/home/ubuntu/app-new.jar

      - name: 🚀 EC2에서 무중단 배포
        run: |
          ssh ${{ secrets.DEV_EC2_USER }}@${{ secrets.DEV_EC2_HOST }} << 'EOF'
            # 포트 8081 정리
            pkill -f "server.port=8081" 2>/dev/null || true
            sleep 2
          
            # 새 JAR로 임시 애플리케이션 시작 (다른 포트)
            cp /home/ubuntu/app-new.jar /tmp/app-test.jar
            JAR_PATH="/tmp/app-test.jar" pm2 start ecosystem.config.js --name "app-test" -- --server.port=8081
            sleep 10
          
            # PID 확인 → PM2 상태 확인으로 변경
            sleep 5
            if ! pm2 list | grep -q "app-test.*online"; then
              echo "애플리케이션 시작 실패"
              pm2 logs app-test --lines 20 --nostream
              pm2 delete app-test 2>/dev/null || true
              exit 1
            fi
          
            # 새 애플리케이션 헬스체크 (최대 60초 대기)
            HEALTH_CHECK_SUCCESS=false
            for i in {1..12}; do
              if curl -f http://localhost:8081/health > /dev/null 2>&1; then
                HEALTH_CHECK_SUCCESS=true
                break
              fi
              sleep 5
            done
          
            # 헬스체크 실패시 롤백
            if [ "$HEALTH_CHECK_SUCCESS" = false ]; then
              echo "헬스체크 실패 - 로그 확인:"
              pm2 logs app-test --lines 20 --nostream
              pm2 delete app-test 2>/dev/null || true
              exit 1
            fi
          
            # 기존 PM2 애플리케이션 교체
            mv /home/ubuntu/app-new.jar /home/ubuntu/app-latest.jar
            if pm2 list | grep -q "app.*online"; then
              pm2 reload ecosystem.config.js --update-env
            else
              pm2 start ecosystem.config.js
            fi
          
            # 임시 프로세스 종료
            pm2 delete app-test
          
            pm2 save
            sleep 5
            curl --retry 3 --retry-delay 3 http://localhost:8080/health > /dev/null 2>&1 || exit 1
          EOF